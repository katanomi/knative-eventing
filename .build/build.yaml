kind: Build
apiVersion: builds.katanomi.dev/v1alpha1
spec:
  workspaces:
    - name: source
  tasks:
    - name: oss-version
      taskRef:
        kind: ClusterTask
        name: alauda-read-oss-version
      params:
        - name: version-file-path
          value: .build/opensource-version
      workspaces:
        - name: source
          workspace: source
    - name: build-apiserver-receive-adapter
      taskRef:
        kind: ClusterTask
        name: alauda-ko-build
      workspaces:
        - name: source
          workspace: source
        - name: cache
      timeout: 0m
      retries: 0
      when: []
      params:
        - name: import-path
          value: ./cmd/apiserver_receive_adapter
        - name: container-image
          value: build-harbor.alauda.cn/devops/knative.dev/eventing/cmd/apiserver_receive_adapter
        - name: container-image-tag
          value: v$(tasks.oss-version.results.oss-version)-$(tasks.oss-version.results.commit-short-id)
        - name: tool-image
          value: registry.alauda.cn:60080/devops/builder-go-121:latest
    - name: build-broker-filter
      taskRef:
        kind: ClusterTask
        name: alauda-ko-build
      workspaces:
        - name: source
          workspace: source
      params:
        - name: verbose
          value: "false"
        - name: import-path
          value: ./cmd/broker/filter
        - name: container-image
          value: build-harbor.alauda.cn/devops/knative.dev/eventing/cmd/broker/filter
        - name: container-image-tag
          value: v$(tasks.oss-version.results.oss-version)-$(tasks.oss-version.results.commit-short-id)
        - name: tool-image
          value: registry.alauda.cn:60080/devops/builder-go-121:latest
    - name: build-broker-ingress
      taskRef:
        kind: ClusterTask
        name: alauda-ko-build
      workspaces:
        - name: source
          workspace: source
      params:
        - name: verbose
          value: "false"
        - name: import-path
          value: ./cmd/broker/ingress
        - name: container-image
          value: build-harbor.alauda.cn/devops/knative.dev/eventing/cmd/broker/ingress
        - name: container-image-tag
          value: v$(tasks.oss-version.results.oss-version)-$(tasks.oss-version.results.commit-short-id)
        - name: tool-image
          value: registry.alauda.cn:60080/devops/builder-go-121:latest
    - name: build-cmd-controller
      taskRef:
        kind: ClusterTask
        name: alauda-ko-build
      workspaces:
        - name: source
          workspace: source
      params:
        - name: verbose
          value: "false"
        - name: import-path
          value: ./cmd/controller
        - name: container-image
          value: build-harbor.alauda.cn/devops/knative.dev/eventing/cmd/controller
        - name: container-image-tag
          value: v$(tasks.oss-version.results.oss-version)-$(tasks.oss-version.results.commit-short-id)
        - name: tool-image
          value: registry.alauda.cn:60080/devops/builder-go-121:latest
    - name: build-in-memory-channel-controller
      taskRef:
        kind: ClusterTask
        name: alauda-ko-build
      workspaces:
        - name: source
          workspace: source
      params:
        - name: verbose
          value: "false"
        - name: import-path
          value: ./cmd/in_memory/channel_controller
        - name: container-image
          value: build-harbor.alauda.cn/devops/knative.dev/eventing/cmd/in_memory/channel_controller
        - name: container-image-tag
          value: v$(tasks.oss-version.results.oss-version)-$(tasks.oss-version.results.commit-short-id)
        - name: tool-image
          value: registry.alauda.cn:60080/devops/builder-go-121:latest
    - name: build-in-memory-channel-dispatcher
      taskRef:
        kind: ClusterTask
        name: alauda-ko-build
      workspaces:
        - name: source
          workspace: source
      params:
        - name: verbose
          value: "false"
        - name: import-path
          value: ./cmd/in_memory/channel_dispatcher
        - name: container-image
          value: build-harbor.alauda.cn/devops/knative.dev/eventing/cmd/in_memory/channel_dispatcher
        - name: container-image-tag
          value: v$(tasks.oss-version.results.oss-version)-$(tasks.oss-version.results.commit-short-id)
        - name: tool-image
          value: registry.alauda.cn:60080/devops/builder-go-121:latest
    - name: build-mtchannel-broker
      taskRef:
        kind: ClusterTask
        name: alauda-ko-build
      workspaces:
        - name: source
          workspace: source
        - name: cache
      timeout: 0m
      retries: 0
      when: []
      params:
        - name: import-path
          value: ./cmd/mtchannel_broker
        - name: container-image
          value: build-harbor.alauda.cn/devops/knative.dev/eventing/cmd/mtchannel_broker
        - name: container-image-tag
          value: v$(tasks.oss-version.results.oss-version)-$(tasks.oss-version.results.commit-short-id)
        - name: tool-image
          value: registry.alauda.cn:60080/devops/builder-go-121:latest
    - name: build-mtping
      taskRef:
        kind: ClusterTask
        name: alauda-ko-build
      workspaces:
        - name: source
          workspace: source
      params:
        - name: verbose
          value: "false"
        - name: import-path
          value: ./cmd/mtping
        - name: container-image
          value: build-harbor.alauda.cn/devops/knative.dev/eventing/cmd/mtping
        - name: container-image-tag
          value: v$(tasks.oss-version.results.oss-version)-$(tasks.oss-version.results.commit-short-id)
        - name: tool-image
          value: registry.alauda.cn:60080/devops/builder-go-121:latest
    - name: build-webhook
      taskRef:
        kind: ClusterTask
        name: alauda-ko-build
      workspaces:
        - name: source
          workspace: source
      params:
        - name: verbose
          value: "false"
        - name: import-path
          value: ./cmd/webhook
        - name: container-image
          value: build-harbor.alauda.cn/devops/knative.dev/eventing/cmd/webhook
        - name: container-image-tag
          value: v$(tasks.oss-version.results.oss-version)-$(tasks.oss-version.results.commit-short-id)
        - name: tool-image
          value: registry.alauda.cn:60080/devops/builder-go-121:latest
    - name: build-migrate
      taskRef:
        kind: ClusterTask
        name: alauda-ko-build
      workspaces:
        - name: source
          workspace: source
        - name: cache
      timeout: 0m
      retries: 0
      when: []
      params:
        - name: import-path
          value: vendor/knative.dev/pkg/apiextensions/storageversion/cmd/migrate/main.go
        - name: container-image
          value: build-harbor.alauda.cn/devops/knative.dev/eventing/vendor/knative.dev/pkg/apiextensions/storageversion/cmd/migrate
        - name: container-image-tag
          value: v$(tasks.oss-version.results.oss-version)-$(tasks.oss-version.results.commit-short-id)
        - name: tool-image
          value: registry.alauda.cn:60080/devops/builder-go-121:latest
    - name: image-scan
      timeout: 30m
      retries: 0
      taskRef:
        resolver: katanomi.hub
        params:
          - name: kind
            value: task
          - name: name
            value: trivy-image-scan
      workspaces:
        - name: source
          workspace: source
        - name: cache
      runAfter:
        - build-apiserver-receive-adapter
        - build-broker-filter
        - build-broker-ingress
      when: []
      params:
        - name: targets
          value:
            - $(tasks.build-apiserver-receive-adapter.results.ociContainerImageBuild-url)
            - $(tasks.build-broker-filter.results.ociContainerImageBuild-url)
            - $(tasks.build-broker-ingress.results.ociContainerImageBuild-url)
    - name: image-scan2
      timeout: 30m
      retries: 0
      taskRef:
        resolver: katanomi.hub
        params:
          - name: kind
            value: task
          - name: name
            value: trivy-image-scan
      workspaces:
        - name: source
          workspace: source
        - name: cache
      runAfter:
        - build-cmd-controller
        - build-in-memory-channel-controller
        - build-in-memory-channel-dispatcher
      when: []
      params:
        - name: targets
          value:
            - $(tasks.build-cmd-controller.results.ociContainerImageBuild-url)
            - $(tasks.build-in-memory-channel-controller.results.ociContainerImageBuild-url)
            - $(tasks.build-in-memory-channel-dispatcher.results.ociContainerImageBuild-url)
    - name: image-scan3
      timeout: 30m
      retries: 0
      taskRef:
        resolver: katanomi.hub
        params:
          - name: kind
            value: task
          - name: name
            value: trivy-image-scan
      workspaces:
        - name: source
          workspace: source
        - name: cache
      runAfter:
        - build-mtchannel-broker
        - build-mtping
        - build-webhook
      when: []
      params:
        - name: targets
          value:
            - $(tasks.build-mtchannel-broker.results.ociContainerImageBuild-url)
            - $(tasks.build-mtping.results.ociContainerImageBuild-url)
            - $(tasks.build-webhook.results.ociContainerImageBuild-url)
    - name: image-scan4
      timeout: 30m
      retries: 0
      taskRef:
        resolver: katanomi.hub
        params:
          - name: kind
            value: task
          - name: name
            value: trivy-image-scan
      workspaces:
        - name: source
          workspace: source
        - name: cache
      runAfter:
        - build-migrate
      when: []
      params:
        - name: targets
          value:
            - $(tasks.build-migrate.results.ociContainerImageBuild-url)
  runTemplate:
    spec:
      taskRunSpecs: []
